---

  - include_vars: "{{ item }}"
    with_first_found:
      - "{{ ansible_distribution }}-{{ ansible_distribution_major_version | int }}.yml"
      - "{{ ansible_distribution }}.yml"
      - "{{ ansible_os_family }}.yml"
      - "default.yml"
    tags: install

#  - name: install certbot (Debian jessie)
#    include: debian-jessie.yml
#    when: ansible_distribution == "Debian" and ansible_distribution_release == "jessie"
#

  - name: install certbot (using {{ certbot_install_method }})
    include_tasks: install-{{ certbot_install_method }}.yml
    when: certbot_install_method != "none"


##  - name: Ensure webroot exists
##    file:
##      path: "{{ certbot_webroot_path }}"
##      state: directory
##      follow: yes
##    become: yes
##
##  - name: Attempt to get the certificate using the webroot authenticator
##    command: "{{ certbot_command }} -a webroot --webroot-path {{ certbot_webroot_path }} certonly"
##    become: yes
##    args:
##      creates: "/etc/certbot/live/{{ certbot_cert_domains[0] }}"
##    when: certbot_authenticator == "webroot"
##    ignore_errors: True
##

# ========================================================================
# Retrieve initial certificate(s)
# ========================================================================

  - name: get certificate using the standalone authenticator 
    command: "{{ certbot_command }} certonly --standalone {{ certbot_standalone_command_args }}"
    become: yes
    args:
      creates: "/etc/letsencrypt/live/{{ certbot_cert_domains[0] }}"
    when: certbot_authenticator == "standalone"



# ========================================================================
# Set up certificatae renewal via cron
# ========================================================================

  - name: Fix the renewal file
    ini_file:
      section: renewalparams
      option: "{{ item.key }}"
      value: "{{ item.value }}"
      dest: "/etc/letsencrypt/renewal/{{ certbot_cert_domains[0] }}.conf"
    become: yes
    with_dict:
      os_packages_only: False
      verb: certonly
      noninteractive_mode: False
      uir: False
      hsts: False
      authenticator: '{{ certbot_authenticator }}'

  - name: Fix the webroot map in the renewal file
    ini_file:
      section: "[webroot_map]"
      option: "{{ item }}"
      value: "{{ certbot_webroot_path }}"
      dest: "/etc/letsencrypt/renewal/{{ certbot_cert_domains[0] }}.conf"
    become: yes
    with_items: "{{ certbot_cert_domains }}"

  - name: Install renewal cron
    become: yes
    cron:
      name: "Let's Encrypt Renewal"
      day: "{{ certbot_renewal_frequency.day }}"
      hour: "{{ certbot_renewal_frequency.hour }}"
      minute: "{{ certbot_renewal_frequency.minute }}"
      job: "{{certbot_path}} renew --quiet {{ certbot_renewal_command_args }}"


##
##  - name: Create directory for `ssl_certificate` and `ssl_certificate_key`
##    file:
##      path: '{{ item }}'
##      state: directory
##      recurse: yes
##    when: ssl_certificate is defined and ssl_certificate_key is defined
##    with_items:
##      - "{{ ssl_certificate|dirname }}"
##      - "{{ ssl_certificate_key|dirname }}"
##
##  - name: Symlink certificates to `ssl_certificate` and `ssl_certificate_key`
##    file:
##      src: '{{ item.src }}'
##      dest: '{{ item.dest }}'
##      state: link
##    when: ssl_certificate is defined and ssl_certificate_key is defined
##    with_items:
##      - src: /etc/letsencrypt/live/{{ certbot_cert_domains[0] }}/fullchain.pem
##        dest: "{{ssl_certificate}}"
##      - src: /etc/letsencrypt/live/{{ certbot_cert_domains[0] }}/privkey.pem
##        dest: "{{ssl_certificate_key}}"
##